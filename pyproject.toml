[build-system]
requires = ["setuptools >= 40.9.0", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
where = ["src"]

[project]
requires-python = ">= 3.12"
dependencies = [
    "kubernetes",
    "cryptography",
    "fastapi",
    "shortuuid",
    "pydantic-settings",
    "httpx",
    "python-jose[cryptography]",
    "fastapi-async-sqlalchemy",
    "asyncpg",
]
name = "cactus-orchestrator"
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "bandit",
    "flake8",
    "mypy",
    "types-python-dateutil",
    "types-tzlocal",
    "black",
    "coverage",
    "kubernetes-stubs",
    "types-python-jose",
]
test = [
    "pytest",
    "pytest-env",
    "pytest-postgresql",
    "psycopg",
    "assertical",
    "pytest-asyncio",
]

[tool.black]
line-length = 120

[tool.pytest.ini_options]
pythonpath = ["src/"]
testpaths = "tests"
env = [
    "D:TESTING_FQDN=testfqdn",
    "D:ORCHESTRATOR_DATABASE_URL=postgresql+asyncpg://fake:fake@fake/fake",
    "D:JWTAUTH_JWKS_URL=https://jwks.com/jwks",
    "D:JWTAUTH_ISSUER=https://issuer.com",
    "D:JWTAUTH_AUDIENCE=cactus_orchestrator",
]
markers = [
    "patch_jwk_cache: marks tests where the jwk cache needs to be patched",
]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.mypy]
exclude = ["tests", "alembic"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
namespace_packages = true
warn_redundant_casts = true

[tool.setuptools.dynamic]
version = { attr = "cactus_orchestrator.__version__" }
